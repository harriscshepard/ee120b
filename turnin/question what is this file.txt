
INITGDBDEBUGGER=$(PATHT)initDebugger.gdb
GDBTESTING=-batch -x $(GDBCOMMANDS) -x $(INITGDBDEBUGGER) -x $(GDBSCRIPT)
GDBDEBUGGING=-x $(GDBCOMMANDS) -x $(INITGDBDEBUGGER)
# Python testing
PYTESTRUNNER=$(PATHT)testRunner.py
PYTESTS=$(PATHT)tests.py
PYTESTCMD=runTests
PYTESTING=-batch -x $(PYTESTS) -x $(PYTESTRUNNER) -ex $(PYTESTCMD)
PYDEBUGGING=-x $(PYTESTS) -x $(PYTESTRUNNER)
# Programmer
PROGRAM=avrdude
PROGRAMMER=atmelice_isp
MEMORY=flash
#mem:op:file where op is (w)rite, (r)ead, (v)erify; performed in the order specified
VERBOSITY=#-v -v ... etc. to have more verbose output. Normal output is usually enough unless something goes wrong.
ADDVERBOSITY=$(info Add additional -v to the \"avrdude -c ...\" command above for more details on the error)
HIGH=hfuse
HDEFAULT=0x99
H120=0xD9
HTXT=hfuse.txt
JTAGEN=0x40
LOW=lfuse
LDEFAULT=0x42
L120=0xC2
HEX=h
RAW=m

.PHONY: defaultFuses verifyFuses fuses disableJTAG clean test program debug pytest pydebug
all: $(PATHB)main.hex

verifyFuses:
        $(PROGRAM) -c $(PROGRAMMER) -p $(MMCU) $(VERBOSITY) -U $(HIGH):r:-:$(HEX) -U $(LOW):r:-:$(HEX) || $(ADDVERBOSITY)

defaultFuses:
        $(PROGRAM) -c $(PROGRAMMER) -p $(MMCU) $(VERBOSITY) -U $(HIGH):w:$(HDEFAULT):$(RAW) -U $(LOW):w:$(LDEFAULT):$(RAW) || $(ADDVERBOSITY)

fuses:
        $(PROGRAM) -c $(PROGRAMMER) -p $(MMCU) $(VERBOSITY) -U $(HIGH):w:$(H120):$(RAW) -U $(LOW):w:$(L120):$(RAW) || $(ADDVERBOSITY)

# Disable just the JTAG fuse
disableJTAG:
        $(PROGRAM) -c $(PROGRAMMER) -p $(MMCU) $(VERBOSITY) -U $(HIGH):r:$(HTXT):$(HEX) || $(ADDVERBOSITY)
        @read -n 4 c < $(HTXT);echo -n "0x" > $(HTXT);echo "obase=16; $$(($$c | $(JTAGEN)))" | bc >> $(HTXT)
        $(PROGRAM) -c $(PROGRAMMER) -p $(MMCU) $(VERBOSITY) -U $(HIGH):w:$(HTXT):$(HEX)
        @rm -f $(HTXT)

program: $(PATHB)main.hex
                                          